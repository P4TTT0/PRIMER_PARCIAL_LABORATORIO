/*
 * censo.c
 *
 *  Created on: 23 may. 2022
 *      Author: PEREZ CARDENAL PATRICIO
 */
#include <stdio.h>
#include <stdlib.h>
#include "desarrollo.h"
#include "censo.h"
#include "input.h"

void inicializarViviendas(sVivienda* lista, int longitud)
{
	int i;

	for (i = 0; i < longitud; i++)
	{
		lista[i].idVivienda = VACIO;
		lista[i]->calle = '-';
		lista[i].cantidadHabitaciones = '-';
		lista[i].cantidadPersonas = '-';
		lista[i].legajoCensista = '-';
		lista[i].tipoVivienda = '-';
	}
}

sVivienda ingresarVivienda(sTipoVivienda* listaOpcionViviendas, int longitud)
{
	sVivienda unaVivienda;
	int opcion;
	int validacion;
	int banderaCalle;
	int banderaCantidadPersonas;
	int banderaCantidadHabitaciones;
	int banderaTipoVivienda;
	int banderaLegajoCensista;
	int bandera;

	opcion = 0;
	validacion = 0;

	clear();
	do
	{
		printf("|[> 1 <] --| INGRESAR VIVIENDA <|\n\n"
				"|[1] >- | INGRESAR CALLE <[]|\n"
				"|[2] >- | INGRESAR CANTIDAD DE PERSONAS <[]|\n"
				"|[3] >- | INGRESAR CANTIDAD DE HABITACIONES <[]|\n"
				"|[4] >- | INGRESAR TIPO DE VIVIENDA <[]|\n"
				"|[5] >- | INGRESAR LEGAJO DE CENSISTA <[]|\n"
				"|[6] >- | SALIR <|\n\n"
			    "|[INGRESE LA OPCION]<|:");

		fflush(stdin);
		scanf("%d", &opcion);

		switch (opcion)
		{
			case 1:
				clear();
				printf("|[> 1 <] --| INGRESAR CALLE <|\n\n"
					   "|[INGRESE LA CALLE]<|:\n");
				scanf("%s", unaVivienda.calle);
				validacion = validarCaracteres(unaVivienda.calle);

				while (validacion == 0)
				{
					clear();
					printf("|[> 1 <] --| INGRESAR CALLE <|\n\n"
						   "|<ERROR>| (Escriba unicamente caracteres)\n"
						   "|[INGRESE LA CALLE]<|:\n");
					scanf("%s", unaVivienda.calle);
					validacion = validarCaracteres(unaVivienda.calle);
				}
				banderaCalle = 1;
			break;

			case 2:
				clear();
				unaVivienda.cantidadPersonas = pedirEntero("|[> 2 <] --| INGRESAR CANTIDAD DE PERSONAS <|\n\n"
						    								"|[INGRESE LA CANTIDAD DE PERSONAS]<|:\n");
				banderaCantidadPersonas = 1;
			break;

			case 3:
				clear();
				unaVivienda.cantidadHabitaciones = pedirEntero("|[> 3 <] --| INGRESAR CANTIDAD DE HABITACIONES <|\n\n"
															   "|[INGRESE LA CANTIDAD DE HABITACIONES]<|:\n");
				banderaCantidadHabitaciones = 1;
			break;

			case 4:
				clear();
				unaVivienda.tipoVivienda = pedirEntero("|[> 4 <] --| INGRESAR TIPO DE VIVIENDA <|\n\n"
													   "|[1] | Casa |\n"
													   "|[2] | Departamento |\n"
													   "|[3] | Casilla |\n"
													   "|[4] | Rancho |\n\n"
													   "|[INGRESE EL TIPO DE VIVIENDA]<|:\n");
				banderaTipoVivienda = 1;
			break;

			case 5:
				clear();
				unaVivienda.legajoCensista = pedirEntero("|[> 5 <] --| INGRESAR LEGAJO CENSISTA <|\n\n"
													   "|[1] | [100] - Ana |\n"
													   "|[2] | [101] - Juan |\n"
													   "|[3] | [102] - Sol |\n\n"
													   "|[INGRESE EL LEGAJO DEL CENSISTA]<|:\n");
				banderaLegajoCensista = 1;
			break;

			case 6:
				bandera = banderaCalle + banderaCantidadPersonas + banderaCantidadHabitaciones + banderaTipoVivienda + banderaLegajoCensista;

				if (bandera == 5)
				{
					clear();
					unaVivienda.idVivienda = generarId();
					printf("|<------   | - GUARDADO CON EXITO - |   ------>|\n\n");
					printf("=============================================================================================\n"
							"||ID     ||CALLE       ||PERSONAS  ||HABITACIONES  ||TIPO DE VIVIENDA    ||LEGAJO CENSISTA  ||\n"
							"=============================================================================================\n"
							"||%-7d||%-12s||%-10d||%-14d||%-20d||%-17d||\n"
							, unaVivienda.idVivienda
							, unaVivienda.calle
							, unaVivienda.cantidadPersonas
							, unaVivienda.cantidadHabitaciones
							, unaVivienda.tipoVivienda
							, unaVivienda.legajoCensista);
					printf("=============================================================================================\n");
				}
				else
				{
					clear();
					printf("|[> ERROR <] --| No se pudo guardar (FALTAN DATOS) <|\n\n");
				}
			break;
		}
	}while (opcion != 6);



	return unaVivienda;
}
